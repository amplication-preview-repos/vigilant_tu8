/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Username as PrismaUsername } from "@prisma/client";

export class UsernameServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UsernameCountArgs, "select">): Promise<number> {
    return this.prisma.username.count(args);
  }

  async usernames(
    args: Prisma.UsernameFindManyArgs
  ): Promise<PrismaUsername[]> {
    return this.prisma.username.findMany(args);
  }
  async username(
    args: Prisma.UsernameFindUniqueArgs
  ): Promise<PrismaUsername | null> {
    return this.prisma.username.findUnique(args);
  }
  async createUsername(
    args: Prisma.UsernameCreateArgs
  ): Promise<PrismaUsername> {
    return this.prisma.username.create(args);
  }
  async updateUsername(
    args: Prisma.UsernameUpdateArgs
  ): Promise<PrismaUsername> {
    return this.prisma.username.update(args);
  }
  async deleteUsername(
    args: Prisma.UsernameDeleteArgs
  ): Promise<PrismaUsername> {
    return this.prisma.username.delete(args);
  }
}
